{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport getTodo from \"../../configuration/ api-endpoints\";\nexport const fetchTodo = createAsyncThunk(\"fetchTodo\", async () => {\n  return fetch(getTodo.GET_ALL_TODOS).then(response => response.json()).then(json => {\n    return json;\n  });\n});\nconst fetchImage = (file, path) => {\n  if (file !== null && path !== null) {\n    const blob = new Blob([new Uint8Array(file.data)], {\n      type: `image/${path.split(\".\").pop()}`\n    });\n    return URL.createObjectURL(blob);\n  }\n};\nconst todoSlice = createSlice({\n  name: \"todo\",\n  initialState: {\n    isLoading: false,\n    data: [],\n    error: false,\n    status: \"idle\"\n  },\n  reducers: {\n    getAll(state, action) {\n      state.todo.push(action.payload);\n    },\n    add(state, action) {\n      state.data.push(action.payload);\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchTodo.pending, (state, action) => {\n      state.status = \"loading\";\n      state.isLoading = true;\n    });\n    builder.addCase(fetchTodo.fulfilled, (state, action) => {\n      state.isLoading = false;\n      let newArr = [];\n      let formatData = \"\";\n      state.status = \"succeeded\";\n      for (let i = 0; i < action.payload.length; i++) {\n        let a = new Date(action.payload[i].date);\n        // let b =  action.payload[i].currentTime;\n        formatData = a.toLocaleDateString();\n        newArr.push({\n          description: action.payload[i].description,\n          date: formatData,\n          currentTime: action.payload[i].time,\n          header: action.payload[i].header,\n          todoId: action.payload[i].todo_id,\n          images: fetchImage(action.payload[i].file_data, action.payload[i].images_path)\n        });\n      }\n      state.data = newArr;\n    });\n    builder.addCase(fetchTodo.rejected, (state, action) => {\n      state.status = \"failed\";\n      state.error = true;\n      state.error = action.error.message;\n    });\n  }\n});\nexport const {\n  add,\n  getAll\n} = todoSlice.actions;\nexport default todoSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","getTodo","fetchTodo","fetch","GET_ALL_TODOS","then","response","json","fetchImage","file","path","blob","Blob","Uint8Array","data","type","split","pop","URL","createObjectURL","todoSlice","name","initialState","isLoading","error","status","reducers","getAll","state","action","todo","push","payload","add","extraReducers","builder","addCase","pending","fulfilled","newArr","formatData","i","length","a","Date","date","toLocaleDateString","description","currentTime","time","header","todoId","todo_id","images","file_data","images_path","rejected","message","actions","reducer"],"sources":["/Users/dimitar/Documents/projects/my_project/upload_article/src/store/todoSlice/todoSlice.js"],"sourcesContent":["import {createAsyncThunk, createSlice} from \"@reduxjs/toolkit\";\nimport getTodo from \"../../configuration/ api-endpoints\";\n\n\nexport const fetchTodo = createAsyncThunk(\"fetchTodo\", async () => {\n  return fetch(getTodo.GET_ALL_TODOS)\n    .then(response => response.json())\n    .then(json => {\n      return json;\n    });\n});\n\nconst fetchImage = (file, path) => {\n  if (file !== null && path !== null) {\n    const blob = new Blob([new Uint8Array(file.data)], {type: `image/${path.split(\".\").pop()}`});\n    return URL.createObjectURL(blob);\n  }\n};\n\nconst todoSlice = createSlice({\n  name: \"todo\",\n  initialState: {\n    isLoading: false,\n    data: [],\n    error: false,\n    status: \"idle\"\n  },\n  reducers: {\n    getAll(state, action) {\n      state.todo.push(action.payload);\n    },\n    add(state, action) {\n      state.data.push(action.payload);\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchTodo.pending, (state, action) => {\n      state.status = \"loading\";\n      state.isLoading = true;\n    });\n    builder.addCase(fetchTodo.fulfilled, (state, action) => {\n      state.isLoading = false;\n      let newArr = [];\n      let formatData: string = \"\";\n      state.status = \"succeeded\";\n      for (let i = 0; i < action.payload.length; i++) {\n        let a = (new Date(action.payload[i].date));\n        // let b =  action.payload[i].currentTime;\n        formatData = a.toLocaleDateString();\n        newArr.push({\n          description: action.payload[i].description,\n          date: formatData,\n          currentTime: action.payload[i].time,\n          header: action.payload[i].header,\n          todoId: action.payload[i].todo_id,\n          images: fetchImage(action.payload[i].file_data, action.payload[i].images_path)\n        });\n      }\n      state.data = newArr;\n    });\n    builder.addCase(fetchTodo.rejected, (state, action) => {\n      state.status = \"failed\";\n      state.error = true;\n      state.error = action.error.message;\n    });\n  }\n});\n\n\nexport const {add, getAll} = todoSlice.actions;\nexport default todoSlice.reducer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}