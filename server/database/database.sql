CREATE TABLE articles
(
    id         INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    title      VARCHAR(255) NOT NULL,
    created_at TIMESTAMP DEFAULT (CURRENT_TIMESTAMP AT TIME ZONE 'Europe/Sofia'),
    status     BOOLEAN   DEFAULT FALSE
);

CREATE TABLE sections
(
    id         SERIAL PRIMARY KEY,
    article_id INT          NOT NULL REFERENCES articles (id) ON DELETE CASCADE,
    title      VARCHAR(255) NOT NULL,
    content    TEXT,
    position   INT          NOT NULL,
    created_at TIMESTAMP DEFAULT (CURRENT_TIMESTAMP AT TIME ZONE 'Europe/Sofia'),
    image_url  VARCHAR(255)
);

CREATE TABLE article_feedback
(
    id         SERIAL PRIMARY KEY,                                                -- Уникален идентификатор за всяка обратна връзка
    article_id INTEGER NOT NULL,                                                  -- ID на статията, към която принадлежи обратната връзка
    user_id    INTEGER,                                                           -- ID на потребителя (ако е необходимо да знаем кой е оставил коментара или харесването)
    comment    TEXT,                                                              -- Текст на коментара (NULL, ако е само харесване)
    is_like    BOOLEAN   DEFAULT FALSE,                                           -- Флаг за харесване (TRUE, ако е харесване)
    is_dislike BOOLEAN   DEFAULT FALSE,                                           -- Флаг за харесване (TRUE, ако е харесване)
    like_at    TIMESTAMP DEFAULT (CURRENT_TIMESTAMP AT TIME ZONE 'Europe/Sofia'), -- Дата и час на създаване
    FOREIGN KEY (article_id) REFERENCES articles (id)                             -- Връзка към таблицата със статиите
);


-- Table to store user information
CREATE TABLE users
(
    id         SERIAL PRIMARY KEY,           -- Unique identifier for each user
    username   VARCHAR(255) UNIQUE NOT NULL,-- Username of the user, must be unique
    first_name VARCHAR(255)        NOT NULL, -- First name of the user
    last_name  VARCHAR(255)        NOT NULL, -- Last name of the user
    email      VARCHAR(255) UNIQUE NOT NULL,-- Email of the user, must be unique
    password   TEXT                NOT NULL  -- Password of the user
);
CREATE TABLE user_logins
(
    id         SERIAL PRIMARY KEY,
    username   VARCHAR(50)                                   NOT NULL,
    password   VARCHAR(255)                                  NOT NULL,
    role       VARCHAR(20) CHECK (role IN ('admin', 'user')) NOT NULL,
    login_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

ALTER SEQUENCE articles_id_seq RESTART WITH 1;
ALTER SEQUENCE sections_id_seq RESTART WITH 1;
